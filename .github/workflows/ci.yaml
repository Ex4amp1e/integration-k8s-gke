---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          config_file: .ci/yamllint.yml
          strict: true
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.35
  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )

  gke:
    environment: GKE
    name: Google Kubernetes Engine
    runs-on: ubuntu-latest
    steps:
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - name: Set up go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Install gcloud-sdk
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Checkout deployments
        uses: actions/checkout@v2
        with:
          repository: networkservicemesh/deployments-k8s
          path: networkservicemesh/deployments-k8s
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
      - name: Setup cluster
        working-directory: ${{ github.repository }}
        run: |
            gcloud container clusters create "${GKE_CLUSTER_NAME}" --project="${GKE_PROJECT_ID}" --machine-type="${GKE_CLUSTER_TYPE}" --num-nodes="${GKE_CLUSTER_NUM_NODES}" --zone="${GKE_CLUSTER_ZONE}" -q
            echo "Writing config to ${KUBECONFIG}"
            gcloud container clusters get-credentials "${GKE_CLUSTER_NAME}" --project="${GKE_PROJECT_ID}" --zone="${GKE_CLUSTER_ZONE}"
            kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user "$(gcloud config get-value account)"
        env:
          GKE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GKE_CLUSTER_NAME: gke-${{ github.run_id }}-${{ github.run_number }}
          GKE_CLUSTER_ZONE: us-central1-a
          GKE_CLUSTER_TYPE: n1-standard-2
          GKE_CLUSTER_NUM_NODES: 2
          KUBECONFIG: config
      - name: Run integration tests
        working-directory: ${{ github.repository }}
        run: |
          export KUBECONFIG=$(pwd)/config
          go test -count 1 -timeout 1h55m -race -v ./...
        env:
          ARTIFACTS_DIR: ${{ github.repository }}/logs
      - name: Cleanup
        if: ${{ always() }}
        working-directory: ${{ github.repository }}
        run: |
          gcloud container clusters delete "${GKE_CLUSTER_NAME}" --project="${GKE_PROJECT_ID}" --zone="${GKE_CLUSTER_ZONE}" -q
        env:
          GKE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GKE_CLUSTER_NAME: gke-${{ github.run_id }}-${{ github.run_number }}
          GKE_CLUSTER_ZONE: us-central1-a
      - name: Upload logs               # 9. Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs-${{ github.run_number }}
          path: ${{ github.repository }}/logs
